{"version":3,"file":"js/847.2e8568b3.js","mappings":"+LACIA,EAAAA,EAAAA,IAEM,OAFDC,GAAG,YAAU,EACdD,EAAAA,EAAAA,IAAiC,MAA7BE,MAAM,eAAc,UAAI,G,GAEhCF,EAAAA,EAAAA,IAAmB,MAAfE,MAAM,QAAM,S,GAEXD,GAAG,e,GAGRD,EAAAA,EAAAA,IAAmB,MAAfE,MAAM,QAAM,S,GAEXA,MAAM,c,GAEEA,MAAM,+B,EAbvB,Y,GAeuBD,GAAG,QAAQC,MAAM,+BAA+BC,MAAA,uB,0CAfvEC,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,MACIC,EAGAC,GAEAP,EAAAA,EAAAA,IAEM,MAFNQ,EAEM,EADFR,EAAAA,EAAAA,IAAmF,UAA3ES,KAAK,SAASP,MAAM,kBAAmBQ,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,WAAAD,EAAAC,aAAAF,KAAW,eAErEG,GAEAf,EAAAA,EAAAA,IAUM,MAVNgB,EAUM,gBATFZ,EAAAA,EAAAA,IAQMC,EAAAA,GAAA,MApBdY,EAAAA,EAAAA,IAY+BC,EAAAC,YAAXC,K,WAAZhB,EAAAA,EAAAA,IAQM,OAR8BiB,IAAKD,GAAM,EAC3CpB,EAAAA,EAAAA,IAMM,MANNsB,EAMM,EALFtB,EAAAA,EAAAA,IAIS,UAJDE,MAAM,uBAAuBO,KAAK,SAAUC,QAAKa,GAAEV,EAAAW,YAAYJ,EAAOK,Q,EAC1EzB,EAAAA,EAAAA,IAEI,IAFJ0B,EAEI,EADA1B,EAAAA,EAAAA,IAAqC,eAAA2B,EAAAA,EAAAA,IAA1BP,EAAOQ,SAAO,QAhBjDC,U,mCA2BA,GACIC,IAAAA,GACI,MAAO,CACHX,WAAY,GAEpB,EACAY,OAAAA,GAEI,GAAoC,MAAhCC,KAAKC,OAAOC,MAAMC,UAGlB,OAFAC,MAAM,yBACNJ,KAAKK,QAAQC,IAAI,EAGzB,EAEAC,OAAAA,GACIP,KAAKQ,iBACT,EACAC,QAAS,CACL,qBAAMD,GACF,IACI,MAAME,QAAiBC,EAAAA,EAAMC,KAAK,mBAAoB,CAAC,GACvDZ,KAAKb,WAAauB,EAASZ,KAAKe,KAAIzB,IAEpCA,EAAO0B,OAASd,KAAKe,WAAW3B,EAAO0B,QAChC1B,KAEP4B,QAAQC,IAAI,YAAaP,EAASZ,KACtC,CAAE,MAAOoB,GACLF,QAAQE,MAAM,6BAA8BA,EAChD,CACJ,EACA,iBAAM1B,CAAYC,GACd,IAEIO,KAAKK,QAAQc,KAAK,CAAEC,KAAM,sBAAuBC,MAAO,CAAE5B,UAC9D,CAAE,MAAOyB,GACLF,QAAQE,MAAM,gCAAiCA,EACnD,CACJ,EACApC,SAAAA,GACIkB,KAAKK,QAAQc,KAAK,oBACtB,EACAJ,UAAAA,CAAWD,GACX,IAAKA,EAAQ,MAAO,GAEpB,MAAMQ,EAAI,IAAIC,KAAKT,GACnB,OAAIU,MAAMF,EAAEG,WAAmB,GAGvB,GAAEH,EAAEI,cAAcC,MAAM,EAAG,IAAIC,QAAQ,IAAK,MACpD,I,UCvER,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://v2_client/./src/views/admin/JY_A_NoticeList.vue","webpack://v2_client/./src/views/admin/JY_A_NoticeList.vue?5d22"],"sourcesContent":["<template>\r\n    <div id=\"pageName\">\r\n        <h2 class=\"text-center\">공지사항</h2>\r\n    </div>   \r\n    <hr class=\"my-4\" />\r\n    <!-- 공지사항 작성하기 버튼 -->\r\n    <div id=\"noticeWrite\">\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"moveWrite\">공지사항 작성하기</button>\r\n    </div>\r\n    <hr class=\"my-4\" />\r\n    <!-- 공지사항 리스트 -->\r\n    <div class=\"noticeList\">\r\n        <div v-for=\"notice, in listNotice\" :key=\"notice\">\r\n            <div class=\"d-grid gap-2 col-10 mx-auto\">\r\n                <button class=\"btn btn-outline-dark\" type=\"button\" @click=\"moveDetails(notice.nonum)\">\r\n                    <p id=\"blind\" class=\"d-inline-block text-truncate\" style=\"max-width: 280px;\">\r\n                        <strong>{{ notice.notitle }}</strong>\r\n                    </p>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            listNotice: [] // 공지사항 리스트 정보를 저장할 객체\r\n        };\r\n    },\r\n    created() {\r\n        // $store.state.userLevel이 103이 아닌 경우 페이지 접근 불가 알림이 뜨고 이전 페이지로 이동\r\n        if (this.$store.state.userLevel !== 103) {\r\n            alert('접근할 수 없는 페이지입니다.');\r\n            this.$router.go(-1);\r\n            return;\r\n        }\r\n    },\r\n    // 공지 리스트 마운트\r\n    mounted() {\r\n        this.fetchNoticeList();\r\n    },\r\n    methods: {\r\n        async fetchNoticeList() {\r\n            try {\r\n                const response = await axios.post('/JY_A_NoticeList', {});\r\n                this.listNotice = response.data.map(notice => {\r\n                // 날짜 데이터를 올바른 포맷으로 수정\r\n                notice.nodate = this.formatDate(notice.nodate);\r\n                return notice;\r\n                });\r\n                console.log('Response:', response.data)\r\n            } catch (error) {\r\n                console.error('Error fetching noticeList:', error);\r\n            }\r\n        },\r\n        async moveDetails(nonum) {\r\n            try {\r\n                // 라우터를 사용하여 페이지 이동\r\n                this.$router.push({ path: \"/JY_A_NoticeDetails\", query: { nonum } });\r\n            } catch (error) {\r\n                console.error('Error fetching noticeDetails:', error);\r\n            }\r\n        },   \r\n        moveWrite() {\r\n            this.$router.push(\"/JY_A_NoticeWrite\")\r\n        },\r\n        formatDate(nodate) {\r\n        if (!nodate) return \"\"; // date 값이 없는 경우 빈 문자열 반환\r\n\r\n        const d = new Date(nodate);\r\n        if (isNaN(d.getTime())) return \"\"; // 유효하지 않은 날짜인 경우 빈 문자열 반환\r\n\r\n        // ISO 형식으로 변환한 날짜를 시간과 분까지만 포맷\r\n        return `${d.toISOString().slice(0, 16).replace('T', ' ')}`;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    .btn-outline-dark {\r\n        margin-top: 10px;\r\n        height: 100px;\r\n        border-color: #F5835D; \r\n    }\r\n\r\n    .btn-primary {\r\n        background-color: #F5835D;\r\n        border-color: #ffe0c7;\r\n    }\r\n\r\n    #blind {\r\n        line-height: 90px;\r\n    }\r\n\r\n    .my-4 {\r\n        border-color: blue;\r\n    }\r\n</style>","import { render } from \"./JY_A_NoticeList.vue?vue&type=template&id=5460d1af\"\nimport script from \"./JY_A_NoticeList.vue?vue&type=script&lang=js\"\nexport * from \"./JY_A_NoticeList.vue?vue&type=script&lang=js\"\n\nimport \"./JY_A_NoticeList.vue?vue&type=style&index=0&id=5460d1af&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","id","class","style","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","type","onClick","_cache","args","$options","moveWrite","_hoisted_4","_hoisted_5","_renderList","$data","listNotice","notice","key","_hoisted_6","$event","moveDetails","nonum","_hoisted_8","_toDisplayString","notitle","_hoisted_7","data","created","this","$store","state","userLevel","alert","$router","go","mounted","fetchNoticeList","methods","response","axios","post","map","nodate","formatDate","console","log","error","push","path","query","d","Date","isNaN","getTime","toISOString","slice","replace","__exports__","render"],"sourceRoot":""}