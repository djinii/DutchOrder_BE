{"version":3,"file":"js/379.e666ab5e.js","mappings":"wMACIA,EAAAA,EAAAA,IAEM,OAFDC,GAAG,YAAU,EACdD,EAAAA,EAAAA,IAAc,UAAV,WAAK,G,GAEbA,EAAAA,EAAAA,IAAmB,MAAfE,MAAM,QAAM,S,GACXA,MAAM,e,GAEFD,GAAG,mBAAmBC,MAAM,sB,EAPzC,gB,GASYF,EAAAA,EAAAA,IAAwC,SAAjCG,IAAI,iBAAgB,SAAK,G,GAG/BF,GAAG,qBAAqBC,MAAM,iB,EAZ3C,gB,GAcYF,EAAAA,EAAAA,IAA4C,SAArCG,IAAI,qBAAoB,SAAK,G,GAGnCD,MAAM,gB,GACFD,GAAG,wB,0CAlBpBG,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,MACIC,EAGAC,GACAP,EAAAA,EAAAA,IAgBM,MAhBNQ,EAgBM,EAdFR,EAAAA,EAAAA,IAGM,MAHNS,EAGM,WAFFT,EAAAA,EAAAA,IAAyG,SARrH,sBAAAU,EAAA,KAAAA,EAAA,GAAAC,GAQ4BC,EAAAC,YAAWF,GAAEG,KAAK,QAAQZ,MAAM,eAAeD,GAAG,gBAAiBc,YAAaH,EAAAI,S,OAR5GC,GAAA,OAQ4BL,EAAAC,eAChBK,KAGJlB,EAAAA,EAAAA,IAGM,MAHNmB,EAGM,WAFFnB,EAAAA,EAAAA,IAAwI,YAbpJ,sBAAAU,EAAA,KAAAA,EAAA,GAAAC,GAa+BC,EAAAQ,cAAaT,GAAET,MAAM,eAAgBa,YAAaH,EAAAS,UAAWpB,GAAG,oBAAoBqB,MAAA,kB,OAbnHC,GAAA,OAa+BX,EAAAQ,iBACnBI,KAGJxB,EAAAA,EAAAA,IAGM,MAHNyB,EAGM,EAFFzB,EAAAA,EAAAA,IAAkD,MAAlD0B,GAAkDC,EAAAA,EAAAA,IAAhBf,EAAAgB,SAAO,IACzC5B,EAAAA,EAAAA,IAAoF,UAA3E6B,QAAKnB,EAAA,KAAAA,EAAA,OAAAoB,IAAEC,EAAAC,aAAAD,EAAAC,eAAAF,IAAa5B,MAAM,kBAAkBD,GAAG,gBAAe,aAAI,G,uBAQvF,GACIgC,IAAAA,GACI,MAAO,CACHpB,YAAa,GACbO,cAAe,GACfQ,QAAS,GACTZ,QAAS,YACTK,UAAW,YAGnB,EACAa,QAAS,CAEL,iBAAMF,GAEF,GAAgC,KAA5BG,KAAKtB,YAAYuB,OAEjB,YADAD,KAAKP,QAAUO,KAAKnB,SAGxB,GAAkC,KAA9BmB,KAAKf,cAAcgB,OAEnB,YADAD,KAAKP,QAAUO,KAAKd,WAIxB,MAAMgB,GAAc,IAAIC,MAAOC,cAG/BC,EAAAA,EAAMC,KAAK,oBAAqB,CAC5BC,MAAOP,KAAKO,MAAQ,EACpBC,KAAM,KACNC,QAAST,KAAKtB,YACdgC,MAAOV,KAAKf,cACZ0B,OAAQT,IAEXU,MAAKC,IAEFC,QAAQC,IAAIF,EAASf,MAErBkB,MAAM,sBAENhB,KAAKiB,QAAQC,KAAK,mBAAmB,IAExCC,OAAMC,IAEHN,QAAQM,MAAM,6BAA6BA,GAE3CJ,MAAM,iBAAiB,GAE/B,I,UCtER,MAAMK,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://v2_client/./src/views/admin/JY_A_NoticeWrite.vue","webpack://v2_client/./src/views/admin/JY_A_NoticeWrite.vue?87b4"],"sourcesContent":["<template>\r\n    <div id=\"pageName\">\r\n        <h2>공지 등록</h2>\r\n    </div>\r\n    <hr class=\"my-4\" />\r\n    <div class=\"NoticeWrite\">\r\n        <!-- 공지 제목 입력 -->\r\n        <div id=\"notiveWriteTitle\" class=\"form-floating mb-3\">\r\n            <input v-model=\"noticeTitle\" type=\"title\" class=\"form-control\" id=\"floatingInput\" :placeholder=\"titlePh\">\r\n            <label for=\"floatingInput\">제목 입력</label>\r\n        </div>\r\n        <!-- 공지 내용 입력 -->\r\n        <div id=\"noticeWriteContent\" class=\"form-floating\">\r\n            <textarea v-model=\"noticeContent\" class=\"form-control\" :placeholder=\"contentPh\" id=\"floatingTextarea2\" style=\"height: 300px\"></textarea>\r\n            <label for=\"floatingTextarea2\">내용 입력</label>\r\n        </div>\r\n        <!-- 목록, 작성완료 버튼 -->\r\n        <div class=\"noticeButton\">\r\n            <div id=\"liveAlertPlaceholder\">{{ message }}</div>\r\n            <button @click=\"submitWrite\" class=\"btn btn-primary\" id=\"liveAlertBtn\">작성완료</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            noticeTitle: '',\r\n            noticeContent: '',\r\n            message: '',\r\n            titlePh: '제목을 입력하세요',\r\n            contentPh: '내용을 입력하세요'\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        // 작성완료 클릭시 실행되는 메소드\r\n        async submitWrite() {\r\n            // 제목, 내용칸이 비어있으면 해당 알림이 뜨도록 설정\r\n            if (this.noticeTitle.trim() === '') {\r\n                this.message = this.titlePh;\r\n                return;\r\n            }\r\n            if (this.noticeContent.trim() === '') {\r\n                this.message = this.contentPh;\r\n                return;\r\n            }\r\n\r\n            const currentTime = new Date().toISOString(); // 현재 시간\r\n\r\n            // 서버로 공지 작성 내용을 전송하는 코드\r\n            axios.post('/JY_A_NoticeWrite', {\r\n                nonum: this.nonum + 1,\r\n                mnum: 1010, // 로그인한 관리자 mnum으로 가져오도록 수정해야함\r\n                notitle: this.noticeTitle,\r\n                nocon: this.noticeContent,\r\n                nodate: currentTime\r\n            })\r\n            .then(response => {\r\n                // 서버로부터 응답을 받았을 때 실행할 작업\r\n                console.log(response.data); // 서버 응답 확인\r\n                // 성공적으로 작성된 경우 알람이 뜸\r\n                alert('공지가 성공적으로 작성되었습니다.')\r\n                // 성공알람 확인후 리스트로 이동\r\n                this.$router.push('/JY_A_NoticeList');\r\n            })\r\n            .catch(error => {\r\n                // 에러가 발생했을 때 실행할 작업\r\n                console.error('Error fetching noticeWrite',error);\r\n                // 에러 메시지 표시\r\n                alert('공지 작성에 실패했습니다.')\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import { render } from \"./JY_A_NoticeWrite.vue?vue&type=template&id=8207d408\"\nimport script from \"./JY_A_NoticeWrite.vue?vue&type=script&lang=js\"\nexport * from \"./JY_A_NoticeWrite.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","id","class","for","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_cache","$event","$data","noticeTitle","type","placeholder","titlePh","_hoisted_5","_hoisted_6","_hoisted_7","noticeContent","contentPh","style","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","message","onClick","args","$options","submitWrite","data","methods","this","trim","currentTime","Date","toISOString","axios","post","nonum","mnum","notitle","nocon","nodate","then","response","console","log","alert","$router","push","catch","error","__exports__","render"],"sourceRoot":""}