"use strict";(self["webpackChunkv2_client"]=self["webpackChunkv2_client"]||[]).push([[588],{4588:function(t,e,a){a.r(e),a.d(e,{default:function(){return w}});var o=a(6768),s=a(4232);const c=(0,o.Lk)("hr",{class:"my-4"},null,-1),n={id:"noticeTitle",class:"card text-center"},i={class:"card-body"},l={class:"card-text"},d={id:"noticeDate"},r={class:"text-center"},u=(0,o.Lk)("hr",{class:"my-4"},null,-1),b={id:"noticeContent",class:"card text-center"},k={class:"card-body"},m={class:"card-text"},y=(0,o.Lk)("hr",{class:"my-4"},null,-1),h={class:"noticeButton"},L=(0,o.Lk)("button",{type:"button",class:"btn btn-primary","data-bs-toggle":"modal","data-bs-target":"#staticBackdrop"}," 공지사항 삭제하기 ",-1),p={class:"modal fade",id:"staticBackdrop","data-bs-backdrop":"static","data-bs-keyboard":"false",tabindex:"-1","aria-labelledby":"staticBackdropLabel","aria-hidden":"true"},v={class:"modal-dialog modal-dialog-centered"},f={class:"modal-content"},_=(0,o.Lk)("div",{class:"modal-header"},[(0,o.Lk)("h1",{class:"modal-title fs-5",id:"staticBackdropLabel"},"공지사항을 정말 삭제하시겠습니까?")],-1),g={class:"modal-footer"},N=(0,o.Lk)("button",{type:"button",class:"btn btn-primary","data-bs-dismiss":"modal","aria-label":"Close"},"취소",-1);function A(t,e,a,A,C,x){return(0,o.uX)(),(0,o.CE)(o.FK,null,[c,(0,o.Lk)("div",n,[(0,o.Lk)("div",i,[(0,o.Lk)("h3",l,(0,s.v_)(C.notice.notitle),1)])]),(0,o.Lk)("div",d,[(0,o.Lk)("span",r,(0,s.v_)(C.notice.strNodate),1)]),u,(0,o.Lk)("div",b,[(0,o.Lk)("div",k,[(0,o.Lk)("p",m,(0,s.v_)(C.notice.nocon),1)])]),y,(0,o.Lk)("div",h,[L,(0,o.Lk)("div",p,[(0,o.Lk)("div",v,[(0,o.Lk)("div",f,[_,(0,o.Lk)("div",g,[(0,o.Lk)("button",{type:"button",class:"btn btn-secondary","data-bs-dismiss":"modal",onClick:e[0]||(e[0]=t=>x.deleteNotice(C.notice.nonum))},"삭제"),N])])])]),(0,o.Lk)("button",{id:"noticeModify",type:"button",class:"btn btn-primary",onClick:e[1]||(e[1]=t=>x.moveModify(C.notice.nonum))},"공지사항 수정하기")])],64)}a(4114);var C=a(8355),x={data(){return{notice:{}}},mounted(){this.fetchNoticeDetails()},methods:{async fetchNoticeDetails(){try{const t=await C.A.post("/JY_A_NoticeDetails",{nonum:this.$route.query.nonum});this.notice=t.data,console.log("Response:",t.data)}catch(t){console.error("Error fetching notice details:",t)}},async moveModify(t){try{this.$router.push({path:"/JY_A_NoticeModify",query:{nonum:t}})}catch(e){console.error("Error fetching noticeDetails:",e)}},async deleteNotice(t){try{const e=await C.A.post("/JY_A_NoticeDelete",{nonum:t}),a=e.data;console.log("Response:",e.data),a>0?(alert("공지사항이 성공적으로 삭제되었습니다."),this.$router.push("/JY_A_NoticeList")):(alert("공지사항 삭제에 실패했습니다."),console.log(a))}catch(e){console.error("Error deleting notice:",e),alert("공지사항 삭제 중 오류가 발생했습니다.")}}}},D=a(1241);const B=(0,D.A)(x,[["render",A]]);var w=B}}]);
//# sourceMappingURL=588.7c00f081.js.map