{"version":3,"file":"js/349.1767919c.js","mappings":"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","sources":["webpack://v2_client/./src/components/client/C_chatbot.vue","webpack://v2_client/./src/components/client/C_chatbot.vue?56c4"],"sourcesContent":["<template>\r\n    <div\r\n      class=\"container py-5\"\r\n      id=\"exampleModal\"\r\n      tabindex=\"-1\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"row d-flex justify-content-center\">\r\n        <div class=\"col-md-8 col-lg-6 col-xl-4\" style=\"width: 375px; height: 812px;\">\r\n          <div class=\"card\" id=\"chat1\" style=\"border-radius: 15px; overflow-y: auto; height: 100%;\">\r\n            <div\r\n              class=\"card-header d-flex justify-content-between align-items-center p-3 bg-info text-white border-bottom-0\"\r\n              style=\"border-top-left-radius: 15px; border-top-right-radius: 15px\"\r\n            >\r\n              \r\n              <p class=\"mb-0 fw-bold\">Chat Bot</p>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              \r\n  \r\n              <!-- 메시지 반복 -->\r\n              <div v-for=\"(message, index) in messages\" :key=\"index\">\r\n                <!-- 사람메세지 -->\r\n                <div\r\n                  class=\"d-flex flex-row justify-content-end mb-4\"\r\n                  v-if=\"message.isUser\"\r\n                >\r\n                  <div\r\n                    class=\"p-3 me-3 border\"\r\n                    style=\"border-radius: 15px; background-color: #fbfbfb\"\r\n                  >\r\n                    <p class=\"small mb-0\">\r\n                      {{ message.text }}\r\n                    </p>\r\n                  </div>\r\n                  <img\r\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava2-bg.webp\"\r\n                    alt=\"avatar 1\"\r\n                    style=\"width: 45px; height: 100%\"\r\n                  />\r\n                </div>\r\n  \r\n                <!-- 챗봇응답메세지 -->\r\n                <div class=\"d-flex flex-row justify-content-start mb-4\" v-else>\r\n                  <img\r\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp\"\r\n                    alt=\"avatar 1\"\r\n                    style=\"width: 45px; height: 100%\"\r\n                  />\r\n                  <div\r\n                    class=\"p-3 ms-3\"\r\n                    style=\"\r\n                      border-radius: 15px;\r\n                      background-color: rgba(57, 192, 237, 0.2);\r\n                    \"\r\n                  >\r\n                    <p class=\"small mb-0\">{{ message.text }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- 메세지 입력칸 -->\r\n            <div class=\"card-footer\">\r\n              <div class=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"메세지를 입력하세요...\"\r\n                  v-model=\"currentMessage\"\r\n                  @keyup.enter=\"sendMessageToBackend\"\r\n                />\r\n                <button\r\n                  class=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                  @click=\"sendMessageToBackend\"\r\n                >\r\n                  보내기\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        currentMessage: \"\", // 입력된 메시지\r\n        messages: [], // 채팅 메시지 목록\r\n      };\r\n    },\r\n    methods: {\r\n      // API 요청 보내기\r\n      async fetchAIResponse(prompt) {\r\n        const apiKey = \"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\"; // ChatGPT API 키\r\n        const apiEndpoint = \"https://api.openai.com/v1/chat/completions\";\r\n  \r\n        try {\r\n          // 포스트로 요청을 보냄 1) URL, 2) BODY, 3) header\r\n          const response = await axios.post(\r\n            apiEndpoint,\r\n            {\r\n              // 요청할 gpt 모델\r\n              model: \"gpt-3.5-turbo\",\r\n              messages: [{ role: \"user\", content: prompt }],\r\n              temperature: 0.8, // 모델의 출력 다양성\r\n              max_tokens: 150, // 생성될 응답의 최대 토큰(단어나 문자) 수\r\n              stop: [\"\\n\", \"User:\", \"Bot:\"], // 생성된 텍스트에서 중지할 문자열 지정\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${apiKey}`, // HTTP 요청의 헤더에 포함되는 인증정보 설정\r\n                \"Content-Type\": \"application/json\", // 요청의 본문이 json 형식임을 나타냄\r\n              },\r\n            }\r\n          );\r\n  \r\n          return response.data.choices[0].message.content; // 요청에 대한 응답에서 생성된 챗봇 응답을 추출하여 반환\r\n        } catch (error) {\r\n          console.error(\"Error fetching AI response:\", error);\r\n          return \"Error fetching AI response\";\r\n        }\r\n      },\r\n      async sendMessageToBackend() {\r\n        // 사용자가 메시지를 입력하고 보내기 버튼을 클릭할 때 실행되는 메소드\r\n        // 사용자 메시지를 메시지 목록에 추가\r\n        this.messages.push({\r\n          text: this.currentMessage,\r\n          isUser: true,\r\n        });\r\n  \r\n        try {\r\n          // 사용자가 입력한 메시지를 서버로 전송\r\n          const response = await axios.post(\"http://localhost:8888/api/chat\", {\r\n            message: this.currentMessage,\r\n          });\r\n  \r\n          alert(\"response.data->\" + response.data);\r\n          console.log(\"response.data->\", response.data);\r\n  \r\n          // 백엔드에서 받은 응답 메시지를 채팅 목록에 추가\r\n          this.messages.push({\r\n            text: response.data,\r\n            isUser: false,\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error sending message to backend:\", error);\r\n        }\r\n  \r\n        // 메시지를 전송한 후 입력 칸 비우기\r\n        this.currentMessage = \"\";\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  \r\n  </style>\r\n  ","import { render } from \"./C_chatbot.vue?vue&type=template&id=27254cec\"\nimport script from \"./C_chatbot.vue?vue&type=script&lang=js\"\nexport * from \"./C_chatbot.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","id","tabindex","style","_createElementVNode","type","key","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","$data","messages","message","index","isUser","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","text","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","placeholder","_cache","$event","currentMessage","onKeyup","_withKeys","args","$options","sendMessageToBackend","onClick","data","methods","fetchAIResponse","prompt","apiKey","apiEndpoint","response","axios","post","model","role","content","temperature","max_tokens","stop","headers","Authorization","choices","error","console","this","push","alert","log","__exports__","render"],"sourceRoot":""}